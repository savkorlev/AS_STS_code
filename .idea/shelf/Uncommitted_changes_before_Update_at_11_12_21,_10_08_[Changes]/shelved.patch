Index: instances/Utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from typing import List, Dict, Tuple\n\n\nclass Instance:\n\n    \"\"\"\n    n : int\n        number of nodes in total\n    Q : int\n        maximum load capacity per vehicle\n    q : List[int]\n        list of customer demands\n    coordinates : List[Tuple[int, int]]\n        list of customer coordinates\n    \"\"\"\n\n    n: int\n    Q: int\n    q: List[int]\n    d: Dict[Tuple, float]\n    coordinates: List[Tuple[int, int]]\n\n    def __init__(self, n: int, Q: int, q: List[int], d: Dict[Tuple[int, int], float], coordinates: List[Tuple[int, int]]):\n        self.n = n\n        self.Q = Q\n        self.q = q\n        self.d = d\n        self.coordinates = coordinates\n\n\nRoute = List[int]\nSolution = List[Route]\n\n\ndef next_fit_heuristic_naive(instance: Instance) -> Solution:\n    order = list(range(1, instance.n))\n    return next_fit_heuristic(order, instance)\n\n\ndef next_fit_heuristic(customer_list: List[int], instance: Instance) -> Solution:\n\n    routes: Solution = list()\n    open_route = [0]\n    open_route_capacity_used = 0\n\n    for c in customer_list:\n        demand = instance.q[c]\n\n        if open_route_capacity_used + demand <= instance.Q:\n            # assign customer to route\n            open_route.append(c)\n            open_route_capacity_used += demand\n\n        else:\n            # close active route\n            open_route.append(0)\n            routes.append(open_route)\n\n            # open new route and assign customer\n            open_route = [0, c]\n            open_route_capacity_used = demand\n\n    # close active route\n    open_route.append(0)\n    routes.append(open_route)  # close the last route\n\n    return routes\n\n\ndef compute_distances(solution: Solution, instance: Instance) -> float:\n    sum_distances = 0.0\n\n    for route in solution:\n        sum_distances += compute_distance(route, instance)\n\n    return sum_distances\n\n\ndef compute_distance(route: Route, instance: Instance) -> float:\n    sum_distances = 0.0\n\n    # route: [0,1,2,3,4,0]\n    #   (i-1)-^ ^-i\n    for i in range(1, len(route)):\n        key = (route[i-1], route[i])\n        sum_distances += instance.d[key]\n\n    return sum_distances\n\ndef compute_total_demand(route: List[int], instance: Instance) -> int:\n    sum_demands = 0\n    for n in route:\n        sum_demands += instance.q[n]\n\n    return sum_demands\n\ndef is_feasible(solution: Solution, instance: Instance) -> bool:\n    \"\"\"\n    checks whether a solution (list of routes) is feasible, i.e.,\n    all customers are visited exactly once and the maximum load capacity Q is never exceeded\n\n    :param solution: list of routes\n    :param instance: corresponding instance\n    :return: True if feasible, False otherwise\n    \"\"\"\n\n    for route in solution:\n        load = compute_total_demand(route, instance)\n        if load > instance.Q:\n            print(f\"Error: load capacity is exceeded ({load} > {instance.Q})\")\n            return False\n\n    node_visited = [0] * instance.n\n    for route in solution:\n        for r_i in route:\n            node_visited[r_i] += 1\n\n    for v in range(1, instance.n):\n        if node_visited[v] != 1:\n            print(f\"Error: node {v} has been visited {node_visited[v]} times\")\n            return False\n\n    return True\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/instances/Utils.py b/instances/Utils.py
--- a/instances/Utils.py	(revision cb9a78b43b87afbaaffd4440db01735f1c7b36f4)
+++ b/instances/Utils.py	(date 1638909550026)
@@ -2,7 +2,6 @@
 
 
 class Instance:
-
     """
     n : int
         number of nodes in total
@@ -20,7 +19,8 @@
     d: Dict[Tuple, float]
     coordinates: List[Tuple[int, int]]
 
-    def __init__(self, n: int, Q: int, q: List[int], d: Dict[Tuple[int, int], float], coordinates: List[Tuple[int, int]]):
+    def __init__(self, n: int, Q: int, q: List[int], d: Dict[Tuple[int, int], float],
+                 coordinates: List[Tuple[int, int]]):
         self.n = n
         self.Q = Q
         self.q = q
@@ -38,7 +38,6 @@
 
 
 def next_fit_heuristic(customer_list: List[int], instance: Instance) -> Solution:
-
     routes: Solution = list()
     open_route = [0]
     open_route_capacity_used = 0
@@ -82,11 +81,12 @@
     # route: [0,1,2,3,4,0]
     #   (i-1)-^ ^-i
     for i in range(1, len(route)):
-        key = (route[i-1], route[i])
+        key = (route[i - 1], route[i])
         sum_distances += instance.d[key]
 
     return sum_distances
 
+
 def compute_total_demand(route: List[int], instance: Instance) -> int:
     sum_demands = 0
     for n in route:
@@ -94,6 +94,7 @@
 
     return sum_demands
 
+
 def is_feasible(solution: Solution, instance: Instance) -> bool:
     """
     checks whether a solution (list of routes) is feasible, i.e.,
Index: src/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pandas as pd\n\nfrom instances.Construction import sort_customers_by_sweep\nfrom instances.Trucks import TruckOne\nfrom instances.Utils import Instance, next_fit_heuristic_naive, compute_distances, next_fit_heuristic, is_feasible\n\nimport os\n# os.chdir('C:/Users/Евгений/Desktop/TUM/WS 2021-2022/Advanced Seminar Sustainable Transportation Systems/AS_STS_code')\n# os.chdir('C:/Users/Maximilian Sammer/PycharmProjects/AS_STS_code/')\n# os.chdir('/Users/tuminyu/Desktop/Cory/TUM Master/Advanced Seminar/Code/Project')\n\n### may come in handy later on:\n# from src import TSPLibReader\n# instance = TSPLibReader.read(\"instances/carModel1.vrp\") //using .vrp\n###\n\n# 1. LOADING THE DATA\ndf_NewYork_1_nodes = pd.read_csv(\"data/NewYork.1.nodes\", sep=' ')\ndf_NewYork_2_nodes = pd.read_csv(\"data/NewYork.2.nodes\", sep=' ')\ndf_NewYork_routes = pd.read_csv(\"data/NewYork.routes\", sep=' ')\ndf_Paris_nodes = pd.read_csv(\"data/Paris.nodes\", sep=' ')\ndf_Paris_routes = pd.read_csv(\"data/Paris.routes\", sep=' ')\ndf_Shanghai_nodes = pd.read_csv(\"data/Shanghai.nodes\", sep=' ')\ndf_Shanghai_routes = pd.read_csv(\"data/Shanghai.routes\", sep=' ')\n\n# # .loc[] - access the data by the name\n# print(df_NewYork_1_nodes.loc[:, \"Duration\"])  #select all rows and the \"Duration\" column\n# print(type(df_NewYork_1_nodes.loc[:, \"Duration\"]))  #return type - Series\n#\n# print(df_NewYork_1_nodes.loc[:, [\"Duration\"]])  #select all rows and the \"Duration\" column\n# print(type(df_NewYork_1_nodes.loc[:, [\"Duration\"]]))  #return type - DataFrame\n#\n# # .iloc[] - access the data by its number\n# print(df_NewYork_1_nodes.iloc[:, 2])  #select all rows and the third column\n# print(df_NewYork_1_nodes.iloc[2, 2])  #select the third row and the third column\n\n# 2. CREATING OUR TRUCKS\ntruck1 = TruckOne(1500)\n\n# 3. CREATING TEST DATASET AND ATTRIBUTES OF FUTURE INSTANCE\ntestDimension = 20\n\ntest_df_Paris_nodes = df_Paris_nodes.iloc[:20, :]                   # select elements from D0 to C19 in nodes\ntest_df_Paris_routes = df_Paris_routes.iloc[:2260, :]               # select elements from D0 to C19 in routes\n# print(test_df_Paris_nodes)\n# print(test_df_Paris_routes)\n\ntestDemandParis = list(test_df_Paris_nodes.loc[:, \"Demand[kg]\"])    # select demand column and convert it to a list\n# print(testDemandParis)\n\ntestParisDistances = {}                                             # the purpose of the following up loop is\nfor row, content in test_df_Paris_routes.iterrows():                # to create tuples with distances from one Id\n    key = (int(content[0][1:]), int(content[1][1:]))                # to another\n    testParisDistances[key] = content[2]\n# print(testParisDistances)\n\ncoordinates = []\nfor row, content in test_df_Paris_nodes.iterrows():\n    coordinate = (content[1], content[2])\n    coordinates.append(coordinate)\n\n# 4. CREATING INSTANCE\nourInstance = Instance(testDimension, truck1.capacity, testDemandParis, testParisDistances, coordinates)\n\n# 5. SIMPLE SOLUTION\nsolution = next_fit_heuristic_naive(ourInstance)\n# Update: by adding an 'f' before a string, you allow for so-called string interpolation, i.e., you can use\n#  {} to access variables from the outer scope which will be inserted at this point in the string.\nprint(f\"Next-Fit-Heuristic | #Vehicles: {len(solution)}, distance: {compute_distances(solution, ourInstance)}\")\n\n# 6. SWEEP HEURISTIC\nsolution = next_fit_heuristic(sort_customers_by_sweep(ourInstance), ourInstance)\nprint(f\"Sweep Heuristic | #Vehicles: {len(solution)}, distance: {compute_distances(solution, ourInstance)}, is_feasible: {is_feasible(solution, ourInstance)}\")\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main.py b/src/main.py
--- a/src/main.py	(revision cb9a78b43b87afbaaffd4440db01735f1c7b36f4)
+++ b/src/main.py	(date 1638909595389)
@@ -1,13 +1,18 @@
+import numpy as np
 import pandas as pd
 
 from instances.Construction import sort_customers_by_sweep
+from instances.LocalSearch import hillclimbing
 from instances.Trucks import TruckOne
-from instances.Utils import Instance, next_fit_heuristic_naive, compute_distances, next_fit_heuristic, is_feasible
+from instances.Utils import Instance, next_fit_heuristic_naive, compute_distances, next_fit_heuristic, is_feasible, \
+    Solution, compute_distance
+from scipy import optimize
 
 import os
+
 # os.chdir('C:/Users/Евгений/Desktop/TUM/WS 2021-2022/Advanced Seminar Sustainable Transportation Systems/AS_STS_code')
 # os.chdir('C:/Users/Maximilian Sammer/PycharmProjects/AS_STS_code/')
-# os.chdir('/Users/tuminyu/Desktop/Cory/TUM Master/Advanced Seminar/Code/Project')
+os.chdir('/Users/tuminyu/Desktop/Cory/TUM Master/Advanced Seminar/Code/Project')
 
 ### may come in handy later on:
 # from src import TSPLibReader
@@ -40,17 +45,17 @@
 # 3. CREATING TEST DATASET AND ATTRIBUTES OF FUTURE INSTANCE
 testDimension = 20
 
-test_df_Paris_nodes = df_Paris_nodes.iloc[:20, :]                   # select elements from D0 to C19 in nodes
-test_df_Paris_routes = df_Paris_routes.iloc[:2260, :]               # select elements from D0 to C19 in routes
+test_df_Paris_nodes = df_Paris_nodes.iloc[:20, :]  # select elements from D0 to C19 in nodes
+test_df_Paris_routes = df_Paris_routes.iloc[:2260, :]  # select elements from D0 to C19 in routes
 # print(test_df_Paris_nodes)
 # print(test_df_Paris_routes)
 
-testDemandParis = list(test_df_Paris_nodes.loc[:, "Demand[kg]"])    # select demand column and convert it to a list
+testDemandParis = list(test_df_Paris_nodes.loc[:, "Demand[kg]"])  # select demand column and convert it to a list
 # print(testDemandParis)
 
-testParisDistances = {}                                             # the purpose of the following up loop is
-for row, content in test_df_Paris_routes.iterrows():                # to create tuples with distances from one Id
-    key = (int(content[0][1:]), int(content[1][1:]))                # to another
+testParisDistances = {}  # the purpose of the following up loop is
+for row, content in test_df_Paris_routes.iterrows():  # to create tuples with distances from one Id
+    key = (int(content[0][1:]), int(content[1][1:]))  # to another
     testParisDistances[key] = content[2]
 # print(testParisDistances)
 
@@ -70,4 +75,24 @@
 
 # 6. SWEEP HEURISTIC
 solution = next_fit_heuristic(sort_customers_by_sweep(ourInstance), ourInstance)
-print(f"Sweep Heuristic | #Vehicles: {len(solution)}, distance: {compute_distances(solution, ourInstance)}, is_feasible: {is_feasible(solution, ourInstance)}")
+print(
+    f"Sweep Heuristic | #Vehicles: {len(solution)}, distance: {compute_distances(solution, ourInstance)}, is_feasible: {is_feasible(solution, ourInstance)}")
+
+
+# 7. SIMULATED ANNEALING
+def compute_distances_ls(solution: Solution, instance: Instance) -> float:
+    solutions = hillclimbing(solution, instance)
+    sum_distances = 0.0
+
+    for route in solutions:
+        sum_distances += compute_distance(route, instance)
+
+    return sum_distances
+
+
+np.random.seed(2021)
+solution = optimize.dual_annealing(compute_distances_ls, args=ourInstance, maxiter=3,
+                                   initial_temp=0.1 * compute_distances(solution, ourInstance),
+                                   restart_temp_ratio=0.7)
+print(
+    f"Simulated Annealing | #Vehicles: {len(solution.x)}, distance: {solution.fun}, is_feasible: {is_feasible(solution.x, ourInstance)}")
Index: .idea/AS_STS_code.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.9 (myenv)\" jdkType=\"Python SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/AS_STS_code.iml b/.idea/AS_STS_code.iml
--- a/.idea/AS_STS_code.iml	(revision cb9a78b43b87afbaaffd4440db01735f1c7b36f4)
+++ b/.idea/AS_STS_code.iml	(date 1638909042473)
@@ -5,4 +5,7 @@
     <orderEntry type="jdk" jdkName="Python 3.9 (myenv)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
+  <component name="PyDocumentationSettings">
+    <option name="renderExternalDocumentation" value="true" />
+  </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"8c680e45-7c97-481f-92a5-74cbaa3d7be3\" name=\"Changes\" comment=\"1) reading data in main&#10;2) small corrections in files' names\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/AS_STS_code.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/AS_STS_code.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/instances/Utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/instances/Utils.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\n    <envs>\n      <env key=\"FLASK_APP\" value=\"app\" />\n    </envs>\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\n    <option name=\"myEnvs\">\n      <map>\n        <entry key=\"FLASK_APP\" value=\"app\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"21PNUh1l9QXN6taUlC8LXgOvLDj\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../live_coding\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.keymap\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"AS_STS_code\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"8c680e45-7c97-481f-92a5-74cbaa3d7be3\" name=\"Changes\" comment=\"\" />\n      <created>1637838780117</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1637838780117</updated>\n      <workItem from=\"1637838782111\" duration=\"18000\" />\n      <workItem from=\"1637838857369\" duration=\"1000\" />\n      <workItem from=\"1637838886920\" duration=\"438000\" />\n      <workItem from=\"1637839513934\" duration=\"1532000\" />\n      <workItem from=\"1637841307407\" duration=\"3068000\" />\n      <workItem from=\"1638054326822\" duration=\"850000\" />\n      <workItem from=\"1638055717024\" duration=\"1999000\" />\n      <workItem from=\"1638198448992\" duration=\"2767000\" />\n      <workItem from=\"1638790429150\" duration=\"1278000\" />\n      <workItem from=\"1638794844323\" duration=\"1422000\" />\n      <workItem from=\"1638796291132\" duration=\"3430000\" />\n      <workItem from=\"1638803722077\" duration=\"4201000\" />\n      <workItem from=\"1638814477004\" duration=\"27000\" />\n      <workItem from=\"1638814535742\" duration=\"1043000\" />\n      <workItem from=\"1638815594844\" duration=\"8019000\" />\n      <workItem from=\"1638829161268\" duration=\"675000\" />\n      <workItem from=\"1638829858377\" duration=\"2599000\" />\n      <workItem from=\"1638832933646\" duration=\"446000\" />\n      <workItem from=\"1638833437967\" duration=\"1081000\" />\n      <workItem from=\"1638834544416\" duration=\"1651000\" />\n      <workItem from=\"1638836393331\" duration=\"1377000\" />\n      <workItem from=\"1638842191801\" duration=\"505000\" />\n      <workItem from=\"1638842715249\" duration=\"127000\" />\n      <workItem from=\"1638842855943\" duration=\"563000\" />\n      <workItem from=\"1638882867872\" duration=\"1816000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Let's see\">\n      <created>1637839022626</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839022626</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Let's see\">\n      <created>1637839248196</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839248196</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Commit via InteliJ\">\n      <created>1637839586612</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839586612</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Commit via InteliJ\">\n      <created>1637839692213</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839692213</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Commit via PyCharm\">\n      <created>1637839764432</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839764432</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Commit via PyCharm\">\n      <created>1637839854080</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637839854080</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Commit via PyCharm\">\n      <created>1637844692536</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637844692537</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Commit via PyCharm\">\n      <created>1637844733464</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637844733464</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Adding data files as .csv\">\n      <created>1638054865117</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638054865117</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"1) reading data in main&#10;2) small corrections in files' names\">\n      <created>1638056253893</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638056253893</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"1) loading all files as .csv in main with &quot; &quot; as a separator&#10;2) lines 19 and 20 - check if data frame's access works (list columns and address them)\">\n      <created>1638057457407</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638057457407</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Added hints\">\n      <created>1638200044845</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638200044845</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Added hints\">\n      <created>1638200484683</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638200484683</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files\">\n      <created>1638795258281</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638795258281</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files\">\n      <created>1638795391731</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1638795391731</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"16\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n        <option value=\"Space.CommitStatus\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Let's see\" />\n    <MESSAGE value=\"Commit via InteliJ\" />\n    <MESSAGE value=\"Commit via PyCharm\" />\n    <MESSAGE value=\"Adding data files as .csv\" />\n    <MESSAGE value=\"1) reading data in main&#10;2) small corrections in files' names\" />\n    <MESSAGE value=\"1) loading all files as .csv in main with &quot; &quot; as a separator&#10;2) lines 19 and 20 - check if data frame's access works (list columns and address them)\" />\n    <MESSAGE value=\"Added hints\" />\n    <MESSAGE value=\"Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/main_py$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1638893032512\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cb9a78b43b87afbaaffd4440db01735f1c7b36f4)
+++ b/.idea/workspace.xml	(date 1639213687715)
@@ -4,9 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="8c680e45-7c97-481f-92a5-74cbaa3d7be3" name="Changes" comment="1) reading data in main&#10;2) small corrections in files' names">
+    <list default="true" id="8c680e45-7c97-481f-92a5-74cbaa3d7be3" name="Changes" comment="debug the constraint &quot;all customers must be visited&quot;">
       <change beforePath="$PROJECT_DIR$/.idea/AS_STS_code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/AS_STS_code.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/instances/Utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/instances/Utils.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.py" afterDir="false" />
@@ -55,9 +54,31 @@
     <property name="node.js.detected.package.tslint" value="true" />
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
-    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
+    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
   </component>
   <component name="RunManager">
+    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
+      <module name="AS_STS_code" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="true" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="AS_STS_code" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -118,7 +139,7 @@
       <workItem from="1638842191801" duration="505000" />
       <workItem from="1638842715249" duration="127000" />
       <workItem from="1638842855943" duration="563000" />
-      <workItem from="1638882867872" duration="1816000" />
+      <workItem from="1638882867872" duration="8529000" />
     </task>
     <task id="LOCAL-00001" summary="Let's see">
       <created>1637839022626</created>
@@ -225,7 +246,14 @@
       <option name="project" value="LOCAL" />
       <updated>1638795391731</updated>
     </task>
-    <option name="localTasksCounter" value="16" />
+    <task id="LOCAL-00016" summary="debug the constraint &quot;all customers must be visited&quot;">
+      <created>1638893122126</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1638893122127</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -263,9 +291,10 @@
     <MESSAGE value="1) loading all files as .csv in main with &quot; &quot; as a separator&#10;2) lines 19 and 20 - check if data frame's access works (list columns and address them)" />
     <MESSAGE value="Added hints" />
     <MESSAGE value="Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files" />
-    <option name="LAST_COMMIT_MESSAGE" value="Completely removed all .csv files since we don't actually need them, we can load the data in the same format directly from .nodes and .routes files" />
+    <MESSAGE value="debug the constraint &quot;all customers must be visited&quot;" />
+    <option name="LAST_COMMIT_MESSAGE" value="debug the constraint &quot;all customers must be visited&quot;" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/main_py$main.coverage" NAME="main Coverage Results" MODIFIED="1638893032512" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
+    <SUITE FILE_PATH="coverage/main_py$main.coverage" NAME="main Coverage Results" MODIFIED="1638909595409" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
   </component>
 </project>
\ No newline at end of file
